# Stage 1: Build
FROM debian:stable-slim AS build

ARG SSL=openssl
ARG BUILD_TYPE=debug
ARG SHMEM=true
ARG DEBIAN_FRONTEND=noninteractive

RUN \
	apt-get update && \
	apt-get install -qq -y --no-install-recommends \
		curl \
		ca-certificates \
		build-essential \
		cmake \
		libconfig-dev \
		libprotobuf-c-dev

RUN \
	if test "${SSL}" = "gnutls" ; then \
		apt-get install -qq -y --no-install-recommends libgnutls28-dev; \
	fi ; \
	if test "${SSL}" = "mbedtls" ; then \
		curl -o mbedtls.tar.bz2 -L https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.2/mbedtls-3.6.2.tar.bz2 ; \
		tar -jxvf mbedtls.tar.bz2 ; \
		cd mbedtls-* ; \
		cmake -Bbuild -H. -DENABLE_TESTING=OFF ; \
		cmake --build build ; \
		cmake --install build ; \
	fi ; \
	if test "${SSL}" = "openssl" ; then \
		apt-get install -qq -y --no-install-recommends libssl-dev ; \
	fi ; \
	echo "SSL=${SSL}"

WORKDIR /umurmur

COPY CMakeLists.txt .
COPY umurmur.conf.example .
COPY cmake cmake
COPY src src

# Build against both OpenSSL and Mbed TLS
RUN \
	cmake -Bbuild-${SSL} -H. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DUSE_SHAREDMEMORY_API=${SHMEM} -DSSL=${SSL} && \
	cmake --build build-${SSL} && \
	cmake --install build-${SSL}

# Stage 2: Runtime
FROM debian:stable-slim

ARG SSL=openssl

RUN \
	apt-get update && \
	apt-get install -qq -y --no-install-recommends \
		libconfig9 \
		libprotobuf-c1 && \
	test "${SSL}" = "gnutls" && \
		apt-get install -qq -y --no-install-recommends \
			libgnutls30 ; \
	test "${SSL}" = "openssl" && \
		apt-get install -qq -y --no-install-recommends \
			libssl3 ; \
	rm -rf /var/lib/apt/lists/* ; \
	mkdir /etc/umurmur

# Copy the compiled binary from the build stage, default to OpenSSL
COPY --from=build /usr/local/sbin/umurmurd /usr/local/sbin/
COPY --from=build /umurmur/umurmur.conf.example /usr/local/etc/umurmur/umurmur.conf

EXPOSE 64738

ENTRYPOINT ["/usr/local/sbin/umurmurd", "-d"]

